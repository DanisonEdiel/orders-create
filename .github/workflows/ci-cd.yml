name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
        
    - name: Install Gradle 8.5
      run: |
        wget -q https://services.gradle.org/distributions/gradle-8.5-bin.zip
        unzip -q gradle-8.5-bin.zip
        export PATH=$PWD/gradle-8.5/bin:$PATH
        echo "PATH=$PWD/gradle-8.5/bin:$PATH" >> $GITHUB_ENV
        gradle --version
        
    - name: Build with Gradle
      run: gradle build -x test
      
    - name: Run Tests
      run: gradle test
      
    - name: Save Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: build/reports/tests
      if: always()
      
    - name: Save Code Coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: build/reports/jacoco
      if: success()

  publish:
    name: Publish Docker image
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/orders-creator:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/orders-creator:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/orders-creator:latest
        cache-to: type=inline
